CREATE SCHEMA EST_CASO_IV;
USE ESTC_IV; 

CREATE TABLE IF NOT EXISTS ALUNOS (
    ALUNO_ID INT PRIMARY KEY,
    ALUNO_CPF VARCHAR(14) NOT NULL,
    ALUNO_NOME VARCHAR(100) NOT NULL,
    ALUNO_DATANASC DATE NOT NULL,
    ALUNO_RUA VARCHAR(100) NOT NULL,
    ALUNO_NUM INT,
    ALUNO_COMPLEMENTO TEXT,
    ALUNO_BAIRRO VARCHAR(100) NOT NULL,
    ALUNO_CIDADE VARCHAR(100) NOT NULL,
    ALUNO_CEP VARCHAR(15) NOT NULL,
    ALUNO_UF CHAR(2) NOT NULL,
    ALUNO_PAIS VARCHAR(100) NOT NULL
);

CREATE TABLE IF NOT EXISTS INSTRUTORES (
    INSTRU_ID INT PRIMARY KEY,
    INSTRU_CPF VARCHAR(14) NOT NULL,
    INSTRU_NOME VARCHAR(100) NOT NULL,
    INSTRU_DATANASC DATE NOT NULL,
    INSTRU_RUA VARCHAR(100) NOT NULL,
    INSTRU_NUM INT,
    INSTRU_COMPLEMENTO TEXT,
    INSTRU_BAIRRO VARCHAR(100) NOT NULL,
    INSTRU_CIDADE VARCHAR(100) NOT NULL,
    INSTRU_CEP VARCHAR(15) NOT NULL,
    INSTRU_UF CHAR(2) NOT NULL,
    INSTRU_PAIS VARCHAR(100) NOT NULL,
    INSTRU_ESPECIALIDADE VARCHAR(100) NOT NULL
);


CREATE TABLE IF NOT EXISTS MODALIDADES (
    MOD_ID INT PRIMARY KEY,
    MOD_NOME VARCHAR(100) NOT NULL,
    MOD_DESCRICAO TEXT NOT NULL
);


CREATE TABLE IF NOT EXISTS PLANOS_TREINAMENTOS (
    PLAN_ID INT PRIMARY KEY,
    ALUNO_ID INT NOT NULL,
    INSTRU_ID INT NOT NULL,
    PLAN_DESCRICAO TEXT NOT NULL,
    PLAN_DATAINICIO DATE NOT NULL,
    PLAN_DATAFIM DATE,
    CONSTRAINT PLTR_FK_ALUNO FOREIGN KEY(ALUNO_ID) REFERENCES ALUNOS(ALUNO_ID),
    CONSTRAINT PLTR_FK_INSTRUTOR FOREIGN KEY(INSTRU_ID) REFERENCES INSTRUTORES(INSTRU_ID)
);

CREATE TABLE IF NOT EXISTS AULAS (
    AULA_ID INT PRIMARY KEY,
    MOD_ID INT NOT NULL,
    INSTRU_ID INT NOT NULL,
    AULA_HORARIO TIME NOT NULL,
    AULA_CAPACIDADE INT NOT NULL,
    CONSTRAINT AULAS_FK_MODALIDADES FOREIGN KEY (MOD_ID) REFERENCES MODALIDADES(MOD_ID),
    CONSTRAINT AULAS_FK_INSTRUTORES FOREIGN KEY (INSTRU_ID) REFERENCES INSTRUTORES(INSTRU_ID)
);


CREATE TABLE IF NOT EXISTS MATRICULAS (
    MATRICULA_ID INT PRIMARY KEY,
    ALUNO_ID INT NOT NULL,
    MOD_ID INT NOT NULL,
    MATRICULA_DATA DATE NOT NULL,
    MATRICULA_STATUS ENUM("MATRICULADO", "NAO MATRICULADO"),
    CONSTRAINT MATRICULA_FK_ALUNOS FOREIGN KEY (ALUNO_ID) REFERENCES ALUNOS(ALUNO_ID),
    CONSTRAINT MATRICULA_FK_MODALIDADES FOREIGN KEY (MOD_ID) REFERENCES MODALIDADES(MOD_ID)

);

CREATE TABLE IF NOT EXISTS PAGAMENTOS (
    PAG_ID INT PRIMARY KEY,
    MATRICULA_ID INT NOT NULL,
    PAG_DATA DATE NOT NULL,
    PAG_VALOR DECIMAL(10, 3) NOT NULL,
    PAG_STATUS ENUM("PAGO", "PENDENTE"),
    CONSTRAINT PAG_FK_MATRICULAS FOREIGN KEY(MATRICULA_ID) REFERENCES MATRICULAS(MATRICULA_ID)
);

CREATE TABLE IF NOT EXISTS ALUNOS_AULAS (
    AULA_ID INT,
    ALUNO_ID INT,
    PRIMARY KEY(AULA_ID, ALUNO_ID),
    CONSTRAINT ALAU_FK_AULAS FOREIGN KEY(AULA_ID) REFERENCES AULAS(AULA_ID),
    CONSTRAINT ALAU_FK_ALUNOS FOREIGN KEY(ALUNO_ID) REFERENCES ALUNOS(ALUNO_ID) 
);

-- DDL'S PARA ALUNOS 
ALTER TABLE ALUNOS ADD COLUMN ALUNO_TELEFONE VARCHAR(15) COMMENT 'NÚMERO DE TELEFONE DO ALUNO';
ALTER TABLE ALUNOS CHANGE ALUNO_CPF CPF_ALUNO VARCHAR(14) NOT NULL COMMENT 'CPF DO ALUNO';
ALTER TABLE ALUNOS MODIFY ALUNO_NOME VARCHAR(150) NOT NULL COMMENT 'NOME COMPLETO DO ALUNO';
ALTER TABLE ALUNOS DROP COLUMN ALUNO_COMPLEMENTO COMMENT 'REMOVE A COLUNA DE COMPLEMENTO DE ENDEREÇO';

-- DDL'S PARA INSTRUTORES
ALTER TABLE INSTRUTORES ADD COLUMN INSTRU_TELEFONE VARCHAR(15) COMMENT 'NÚMERO DE TELEFONE DO INSTRUTOR';
ALTER TABLE INSTRUTORES CHANGE INSTRU_ESPECIALIDADE ESPECIALIDADE_INSTRUTOR VARCHAR(100) NOT NULL COMMENT 'ESPECIALIDADE DO INSTRUTOR';
ALTER TABLE INSTRUTORES MODIFY INSTRU_NOME VARCHAR(150) NOT NULL COMMENT 'NOME COMPLETO DO INSTRUTOR';
ALTER TABLE INSTRUTORES DROP COLUMN INSTRU_COMPLEMENTO COMMENT 'REMOVE A COLUNA DE COMPLEMENTO DE ENDEREÇO';

-- DDL'S PARA MODALIDADES
ALTER TABLE MODALIDADES ADD COLUMN MOD_DURACAO INT COMMENT 'DURAÇÃO EM MINUTOS DA MODALIDADE';
ALTER TABLE MODALIDADES CHANGE MOD_DESCRICAO DESCRICAO_MODALIDADE TEXT NOT NULL COMMENT 'DESCRIÇÃO DETALHADA DA MODALIDADE';
ALTER TABLE MODALIDADES MODIFY MOD_NOME VARCHAR(150) NOT NULL COMMENT 'NOME DA MODALIDADE';
ALTER TABLE MODALIDADES DROP COLUMN MOD_DURACAO COMMENT 'REMOVE A COLUNA DE DURAÇÃO DA MODALIDADE';

-- DDL'S PARA PLANOS_TREINAMENTOS
ALTER TABLE PLANOS_TREINAMENTOS ADD COLUMN PLAN_NIVEL VARCHAR(50) COMMENT 'NÍVEL DE COMPLEXIDADE DO PLANO';
ALTER TABLE PLANOS_TREINAMENTOS CHANGE PLAN_DESCRICAO DESCRICAO_PLANO TEXT NOT NULL COMMENT 'DESCRIÇÃO DO PLANO DE TREINAMENTO';
ALTER TABLE PLANOS_TREINAMENTOS MODIFY PLAN_DATAFIM DATE NULL COMMENT 'DATA DE TÉRMINO DO PLANO DE TREINAMENTO (OPCIONAL)';
ALTER TABLE PLANOS_TREINAMENTOS DROP COLUMN PLAN_NIVEL COMMENT 'REMOVE A COLUNA DE NÍVEL DO PLANO';

-- DDL'S PARA AULAS
ALTER TABLE AULAS ADD COLUMN AULA_DESCRICAO TEXT COMMENT 'DESCRIÇÃO DA AULA';
ALTER TABLE AULAS CHANGE AULA_CAPACIDADE CAPACIDADE_AULA INT NOT NULL COMMENT 'CAPACIDADE MÁXIMA DA AULA';
ALTER TABLE AULAS MODIFY AULA_HORARIO TIME NULL COMMENT 'HORÁRIO DA AULA (OPCIONAL)';
ALTER TABLE AULAS DROP COLUMN AULA_DESCRICAO COMMENT 'REMOVE A COLUNA DE DESCRIÇÃO DA AULA';

-- DDL' PARA MATRICULAS
ALTER TABLE MATRICULAS ADD COLUMN MATRICULA_OBSERVACAO TEXT COMMENT 'OBSERVAÇÕES SOBRE A MATRÍCULA';
ALTER TABLE MATRICULAS CHANGE MATRICULA_STATUS STATUS_MATRICULA ENUM("MATRICULADO", "NAO MATRICULADO") COMMENT 'STATUS DA MATRÍCULA';
ALTER TABLE MATRICULAS MODIFY MATRICULA_DATA DATE NULL COMMENT 'DATA DA MATRÍCULA (OPCIONAL)';
ALTER TABLE MATRICULAS DROP COLUMN MATRICULA_OBSERVACAO COMMENT 'REMOVE A COLUNA DE OBSERVAÇÃO DA MATRÍCULA';

--DDL'S PARA PAGAMENTOS 
ALTER TABLE PAGAMENTOS ADD COLUMN PAG_FORMAPAGAMENTO VARCHAR(50) COMMENT 'FORMA DE PAGAMENTO UTILIZADA';
ALTER TABLE PAGAMENTOS CHANGE PAG_STATUS STATUS_PAGAMENTO ENUM("PAGO", "PENDENTE") COMMENT 'STATUS DO PAGAMENTO';
ALTER TABLE PAGAMENTOS MODIFY PAG_VALOR DECIMAL(15, 2) NOT NULL COMMENT 'VALOR DO PAGAMENTO';
ALTER TABLE PAGAMENTOS DROP COLUMN PAG_FORMAPAGAMENTO COMMENT 'REMOVE A COLUNA DE FORMA DE PAGAMENTO';

--DDL'S PARA ALUNOS_AULAS
ALTER TABLE ALUNOS_AULAS ADD COLUMN AULA_NOTA DECIMAL(5, 2) COMMENT 'NOTA DO ALUNO NA AULA';
ALTER TABLE ALUNOS_AULAS CHANGE AULA_ID ID_AULA INT COMMENT 'ID DA AULA';
ALTER TABLE ALUNOS_AULAS MODIFY ALUNO_ID INT NULL COMMENT 'ID DO ALUNO (OPCIONAL)';
ALTER TABLE ALUNOS_AULAS DROP COLUMN AULA_NOTA COMMENT 'REMOVE A COLUNA DE NOTA DO ALUNO NA AULA';

