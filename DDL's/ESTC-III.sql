CREATE SCHEMA ESTC_III;
USE ESTC_III;

CREATE TABLE IF NOT EXISTS CARGOS(
    ID_CARGO INT PRIMARY KEY,
    NOME_CARGO VARCHAR(50) NOT NULL,
    FUNCOES VARCHAR(100) NOT NULL,
    SALARIO DECIMAL(8,3)
);

CREATE TABLE IF NOT EXISTS TIPO_ENDERECO(
    COD_TIPO_END INT PRIMARY KEY,
    NOME_TIPO_END VARCHAR(50) NOT NULL
);

CREATE TABLE IF NOT EXISTS ENDERECOS(
    ID_ENDERECO INT PRIMARY KEY,
    NOME_RUA VARCHAR(50) NOT NULL,
    BAIRRO VARCHAR(50) NOT NULL,
    CIDADE VARCHAR(50) NOT NULL,
    UF VARCHAR(2) NOT NULL,
    PAIS VARCHAR(50) NOT NULL,
    CEP VARCHAR(8),
    TIPO_ENDERECO INT NOT NULL,
    CONSTRAINT FK_TIPO_ENDERECOS_ENDERECOS FOREIGN KEY (TIPO_ENDERECO) REFERENCES TIPO_ENDERECO(COD_TIPO_END)
);

CREATE TABLE IF NOT EXISTS EMPREGADOS(
    NMR_MATRICULA INT PRIMARY KEY,
    NOME_FUNC VARCHAR(100),
    CPF_FUNC VARCHAR(14),
    DATA_ADMISS DATE NOT NULL,
    QUALIF_FUNC VARCHAR(45),
    CARGO INT NOT NULL,
    ENDERECO INT,
    CONSTRAINT FK_CARGO_EMPREGADOS FOREIGN KEY(CARGO) REFERENCES CARGOS(ID_CARGO),
    CONSTRAINT FK_ENDERECOS_EMPREGADOS FOREIGN KEY(ENDERECO) REFERENCES ENDERECOS(ID_ENDERECO)
);

CREATE TABLE IF NOT EXISTS TELEFONES_EMPREGADOS(
    COD_TELEF_EMPG INT PRIMARY KEY,
    TLF_EMPG VARCHAR(11) NOT NULL,
    EMPREGADO INT NOT NULL,
    CONSTRAINT FK_EMPREGADOS_TELEFONES FOREIGN KEY (EMPREGADO) REFERENCES EMPREGADOS(NMR_MATRICULA)
);

CREATE TABLE IF NOT EXISTS PRODUTO(
    COD_PROD INT PRIMARY KEY,
    NOME_PROD VARCHAR(50) NOT NULL,
    DIMENSOES_PROD VARCHAR(30) NOT NULL,
    COR_PROD VARCHAR(30) NOT NULL,
    TEMP_FAB_PROD VARCHAR(30) NOT NULL,
    QNT_PROD_ESTQ INT NOT NULL
);

CREATE TABLE IF NOT EXISTS EMPREGADOS_PRODUTOS(
    PRODUTO INT,
    FUNCIONARIO INT,
    HORAS_TRABALHADAS VARCHAR(4) NOT NULL,
    PRIMARY KEY(PRODUTO, FUNCIONARIO),
    CONSTRAINT FK_PRODUTO_EMPREGADOS FOREIGN KEY(PRODUTO) REFERENCES PRODUTO(COD_PROD),
    CONSTRAINT FK_FUNCIONARIO_EMPREGADOS FOREIGN KEY(FUNCIONARIO) REFERENCES EMPREGADOS(NMR_MATRICULA)
);

CREATE TABLE IF NOT EXISTS MAQUINAS(
    MAQ_COD INT PRIMARY KEY,
    MAQ_NOME VARCHAR(50) NOT NULL,
    MAQ_TEMPO_VIDA VARCHAR(5) NOT NULL,
    MAR_DATA_COMPRA DATE NOT NULL,
    MAQ_DATA_FIM_GART DATE NOT NULL
);

CREATE TABLE IF NOT EXISTS MAQUINAS_PRODUTOS(
    MAQUINA INT,
    PRODUTO_UTLZ INT,
    HORAS_UTLZ VARCHAR(5) NOT NULL,
    PRIMARY KEY(MAQUINA, PRODUTO_UTLZ),
    CONSTRAINT FK_MAQUINA_MAQUINAS_PRODUTOS FOREIGN KEY (MAQUINA) REFERENCES MAQUINAS(MAQ_COD),
    CONSTRAINT FK_PRODUTO_MAQUINAS_PRODUTOS FOREIGN KEY (PRODUTO_UTLZ) REFERENCES PRODUTO(COD_PROD)
);

CREATE TABLE IF NOT EXISTS REGISTRO_MANUTENCAO(
    RM_COD INT PRIMARY KEY,
    RM_DATA DATE NOT NULL,
    RM_DESC TEXT NOT NULL,
    RM_MAQUINA INT NOT NULL,
    CONSTRAINT FK_MAQUINA_REGISTRO_MANUTENCAO FOREIGN KEY (RM_MAQUINA) REFERENCES MAQUINAS(MAQ_COD)
);

CREATE TABLE IF NOT EXISTS TIPO_COMPONENTE(
    TPDC_COD INT PRIMARY KEY,
    TPDC_NOME VARCHAR(50) NOT NULL,
    TDCP_QNT_ESTQ DECIMAL(10,3) NOT NULL
);

CREATE TABLE IF NOT EXISTS COMPONENTES(
    COMP_COD INT PRIMARY KEY,
    COMP_NOME VARCHAR(50) NOT NULL,
    COMP_UNIDADE VARCHAR(30) NOT NULL,
    COMP_QNT_ESTQ DECIMAL(10,3) NOT NULL,
    COMP_TIPO INT NOT NULL,
    CONSTRAINT FK_TIPO_COMPONENTE FOREIGN KEY(COMP_TIPO) REFERENCES TIPO_COMPONENTE(TPDC_COD)
);

CREATE TABLE IF NOT EXISTS PRODUTOS_COMPONENTES(
    COMPONENTE INT,
    PROD_PRDZ INT,
    PRIMARY KEY(COMPONENTE, PROD_PRDZ),
    CONSTRAINT FK_COMPONENTE_PRODUTOS FOREIGN KEY(COMPONENTE) REFERENCES COMPONENTES(COMP_COD),
    CONSTRAINT FK_PRODUTO_PRODUTOS FOREIGN KEY(PROD_PRDZ) REFERENCES PRODUTO(COD_PROD)
);

CREATE TABLE IF NOT EXISTS RECURSOS_ESPECIFICOS(
    RE_ID INT PRIMARY KEY,
    RE_HORAS_MAO_OBRA VARCHAR(5) NOT NULL,
    RE_DATA DATE NOT NULL,
    RE_TEMPO_MAQ VARCHAR(5) NOT NULL
);

CREATE TABLE IF NOT EXISTS EMPRESAS(
    EMPRESA_CNPJ VARCHAR(14) PRIMARY KEY,
    EMPRESA_RAZAO_SOCIAL VARCHAR(50) NOT NULL,
    EMPRESA_RAMO VARCHAR(50) NOT NULL,
    EMPRESA_CONT VARCHAR(14) NOT NULL,
    EMPRESA_END INT NOT NULL,
    CONSTRAINT FK_ENDERECOS_EMPRESAS FOREIGN KEY(EMPRESA_END) REFERENCES ENDERECOS(ID_ENDERECO)
);

CREATE TABLE IF NOT EXISTS TELEFONES_EMPRESAS(
    ID_TELF_EMP INT PRIMARY KEY,
    EMPRESA VARCHAR(14),
    TELEFONE VARCHAR(14) NOT NULL,
    CONSTRAINT FK_EMPRESAS_TELEFONES_EMPRESAS FOREIGN KEY(EMPRESA) REFERENCES EMPRESAS(EMPRESA_CNPJ)
);

CREATE TABLE IF NOT EXISTS FORNECEDORES(
    FORN_ID INT PRIMARY KEY,
    CONT_PESSOA VARCHAR(50) NOT NULL,
    FORN_NMR VARCHAR(14) NOT NULL,
    FORN_CNPJ VARCHAR(14) NOT NULL,
    FORN_ENDERECO INT NOT NULL,
    CONSTRAINT FK_EMPRESAS_FORNECEDORES FOREIGN KEY (FORN_CNPJ) REFERENCES EMPRESAS(EMPRESA_CNPJ),
    CONSTRAINT FK_ENDERECOS_FORNECEDORES FOREIGN KEY (FORN_ENDERECO) REFERENCES ENDERECOS(ID_ENDERECO)
);

CREATE TABLE IF NOT EXISTS COMPONENTES_FORNECEDORES(
    COMPONENTE INT,
    FORNECEDOR_COMP INT,
    PRECO_UNT DECIMAL(8,3) NOT NULL,
    CONSTRAINT FK_COMPONENTE_COMPONENTES_FORNECEDORES FOREIGN KEY (COMPONENTE) REFERENCES COMPONENTES(COMP_COD),
    CONSTRAINT FK_FORNECEDOR_COMPONENTES_FORNECEDORES FOREIGN KEY (FORNECEDOR_COMP) REFERENCES FORNECEDORES(FORN_ID)
);

CREATE TABLE IF NOT EXISTS REGISTRO_RESSUPRIMENTO(
    RS_COD INT PRIMARY KEY,
    RS_DATA DATE NOT NULL,
    RS_QNT_NECES DECIMAL(8,3) NOT NULL,
    RS_COMP INT NOT NULL,
    RS_FORN INT NOT NULL, 
    CONSTRAINT FK_COMPONENTE_REGISTRO_RESSUPRIMENTO FOREIGN KEY (RS_COMP) REFERENCES COMPONENTES(COMP_COD),
    CONSTRAINT FK_FORNECEDOR_REGISTRO_RESSUPRIMENTO FOREIGN KEY (RS_FORN) REFERENCES FORNECEDORES(FORN_ID)
);

CREATE TABLE IF NOT EXISTS ENDERECOS_CLIENTES(
    ID_ENDERECOS_CLT INT PRIMARY KEY,
    RUA VARCHAR(50) NOT NULL,
    BAIRRO VARCHAR(50) NOT NULL,
    CIDADE VARCHAR(50) NOT NULL,
    UF VARCHAR(2) NOT NULL,
    PAIS VARCHAR(50) NOT NULL,
    CEP VARCHAR(8),
    TIPO_ENDERECO INT,
    CONSTRAINT FK_TIPO_ENDERECOS_ENDERECOS_CLIENTES FOREIGN KEY (TIPO_ENDERECO) REFERENCES TIPO_ENDERECO(COD_TIPO_END)
);

CREATE TABLE IF NOT EXISTS CLIENTES(
    CLT_COD INT PRIMARY KEY,
    CLT_DATA_CADS DATE NOT NULL,
    CLT_PESS_CONT VARCHAR(50) NOT NULL,
    CLT_NMR_CONT VARCHAR(14) NOT NULL,
    CLT_CNPJ VARCHAR(14) NOT NULL,
    CONSTRAINT FK_EMPRESAS_CLIENTES FOREIGN KEY (CLT_CNPJ) REFERENCES EMPRESAS(EMPRESA_CNPJ)
);

CREATE TABLE IF NOT EXISTS ENCOMENDAS(
    ENCOM_COD INT PRIMARY KEY,
    ENCOM_DATA DATE NOT NULL,
    ENCOM_CLT INT NOT NULL,
    CONSTRAINT FK_CLIENTES_ENCOMENDAS FOREIGN KEY (ENCOM_CLT) REFERENCES CLIENTES(CLT_COD)
);

CREATE TABLE IF NOT EXISTS PAGAMENTOS(
    PAG_COD INT PRIMARY KEY,
    PAG_VLR_TOTAL DECIMAL(10,3) NOT NULL,
    PAG_VLR_DESC DECIMAL(10,3) NOT NULL,
    PAG_DATA DATE NOT NULL,
    PAG_QNT_PARCELAS INT NOT NULL,
    PAG_ENCOM INT NOT NULL,
    CONSTRAINT FK_ENCOMENDAS_PAGAMENTOS FOREIGN KEY (PAG_ENCOM) REFERENCES ENCOMENDAS(ENCOM_COD)
);

CREATE TABLE IF NOT EXISTS PRODUTOS_ENCOMENDAS(
    ENCM_COD INT NOT NULL,
    PROD_COD INT NOT NULL,
    QNT_PROD INT NOT NULL,
    PRIMARY KEY (ENCM_COD, PROD_COD),
    CONSTRAINT FK_ENCOMENDAS_PRODUTOS FOREIGN KEY (ENCM_COD) REFERENCES ENCOMENDAS(ENCOM_COD),
    CONSTRAINT FK_PRODUTOS_PRODUTOS_ENCOMENDAS FOREIGN KEY (PROD_COD) REFERENCES PRODUTO(COD_PROD)
);

-- DDL'S PARA TABELA DE CARGOS
ALTER TABLE CARGOS ADD COLUMN DESCRICAO TEXT COMMENT 'DESCRIÇÃO DAS FUNÇÕES DO CARGO';
ALTER TABLE CARGOS CHANGE NOME_CARGO NOME_CARGO VARCHAR(100) NOT NULL COMMENT 'NOME DO CARGO';
ALTER TABLE CARGOS MODIFY SALARIO DECIMAL(10, 2) COMMENT 'SALÁRIO DO CARGO';
ALTER TABLE CARGOS DROP COLUMN DESCRICAO COMMENT 'REMOVE A COLUNA DE DESCRIÇÃO DAS FUNÇÕES DO CARGO';

-- DDL'S PARA TABELA DE TIPO_ENDERECO
ALTER TABLE TIPO_ENDERECO ADD COLUMN DESCRICAO TEXT COMMENT 'DESCRIÇÃO DO TIPO DE ENDEREÇO';
ALTER TABLE TIPO_ENDERECO CHANGE NOME_TIPO_END NOME_TIPO_END VARCHAR(100) NOT NULL COMMENT 'NOME DO TIPO DE ENDEREÇO';
ALTER TABLE TIPO_ENDERECO MODIFY COD_TIPO_END INT AUTO_INCREMENT COMMENT 'CÓDIGO DO TIPO DE ENDEREÇO';
ALTER TABLE TIPO_ENDERECO DROP COLUMN DESCRICAO COMMENT 'REMOVE A COLUNA DE DESCRIÇÃO DO TIPO DE ENDEREÇO';

-- DDL'S PARA TABELA DE ENDERECOS
ALTER TABLE ENDERECOS ADD COLUMN COMPLEMENTO VARCHAR(50) COMMENT 'COMPLEMENTO DO ENDEREÇO';
ALTER TABLE ENDERECOS CHANGE NOME_RUA NOME_RUA VARCHAR(100) NOT NULL COMMENT 'NOME DA RUA';
ALTER TABLE ENDERECOS MODIFY CEP VARCHAR(10) COMMENT 'CEP DO ENDEREÇO';
ALTER TABLE ENDERECOS DROP COLUMN COMPLEMENTO COMMENT 'REMOVE A COLUNA DE COMPLEMENTO DO ENDEREÇO';

-- DDL'S PARA TABELA DE EMPREGADOS
ALTER TABLE EMPREGADOS ADD COLUMN EMAIL_FUNC VARCHAR(100) COMMENT 'EMAIL DO FUNCIONÁRIO';
ALTER TABLE EMPREGADOS CHANGE NOME_FUNC NOME_FUNC VARCHAR(150) COMMENT 'NOME COMPLETO DO FUNCIONÁRIO';
ALTER TABLE EMPREGADOS MODIFY QUALIF_FUNC VARCHAR(100) COMMENT 'QUALIFICAÇÕES DO FUNCIONÁRIO';
ALTER TABLE EMPREGADOS DROP COLUMN EMAIL_FUNC COMMENT 'REMOVE A COLUNA DE EMAIL DO FUNCIONÁRIO';

-- DDL'S PARA TABELA DE TELEFONES_EMPREGADOS
ALTER TABLE TELEFONES_EMPREGADOS ADD COLUMN TIPO_TLF VARCHAR(20) COMMENT 'TIPO DO TELEFONE (MÓVEL, FIXO)';
ALTER TABLE TELEFONES_EMPREGADOS CHANGE TLF_EMPG TLF_EMPG VARCHAR(15) NOT NULL COMMENT 'NÚMERO DO TELEFONE DO EMPREGADO';
ALTER TABLE TELEFONES_EMPREGADOS MODIFY COD_TELEF_EMPG INT AUTO_INCREMENT COMMENT 'CÓDIGO DO TELEFONE DO EMPREGADO';
ALTER TABLE TELEFONES_EMPREGADOS DROP COLUMN TIPO_TLF COMMENT 'REMOVE A COLUNA DE TIPO DO TELEFONE DO EMPREGADO';

-- DDL'S PARA TABELA DE PRODUTO
ALTER TABLE PRODUTO ADD COLUMN DESCRICAO TEXT COMMENT 'DESCRIÇÃO DO PRODUTO';
ALTER TABLE PRODUTO CHANGE DIMENSOES_PROD DIMENSOES_PROD VARCHAR(50) COMMENT 'DIMENSÕES DO PRODUTO';
ALTER TABLE PRODUTO MODIFY QNT_PROD_ESTQ INT DEFAULT 0 COMMENT 'QUANTIDADE EM ESTOQUE DO PRODUTO';
ALTER TABLE PRODUTO DROP COLUMN DESCRICAO COMMENT 'REMOVE A COLUNA DE DESCRIÇÃO DO PRODUTO';

-- DDL'S PARA TABELA DE EMPREGADOS_PRODUTOS
ALTER TABLE EMPREGADOS_PRODUTOS ADD COLUMN OBSERVACOES TEXT COMMENT 'OBSERVAÇÕES SOBRE O TRABALHO DO FUNCIONÁRIO';
ALTER TABLE EMPREGADOS_PRODUTOS CHANGE HORAS_TRABALHADAS HORAS_TRABALHADAS INT COMMENT 'HORAS TRABALHADAS PELO FUNCIONÁRIO';
ALTER TABLE EMPREGADOS_PRODUTOS MODIFY FUNCIONARIO INT NOT NULL COMMENT 'CÓDIGO DO FUNCIONÁRIO';
ALTER TABLE EMPREGADOS_PRODUTOS DROP COLUMN OBSERVACOES COMMENT 'REMOVE A COLUNA DE OBSERVAÇÕES SOBRE O TRABALHO DO FUNCIONÁRIO';

-- DDL'S PARA TABELA DE MAQUINAS
ALTER TABLE MAQUINAS ADD COLUMN DESCRICAO TEXT COMMENT 'DESCRIÇÃO DA MÁQUINA';
ALTER TABLE MAQUINAS CHANGE MAQ_NOME NOME_MAQUINA VARCHAR(100) NOT NULL COMMENT 'NOME DA MÁQUINA';
ALTER TABLE MAQUINAS MODIFY MAQ_DATA_FIM_GART DATE NULL COMMENT 'DATA DE FIM DA GARANTIA (OPCIONAL)';
ALTER TABLE MAQUINAS DROP COLUMN DESCRICAO COMMENT 'REMOVE A COLUNA DE DESCRIÇÃO DA MÁQUINA';

-- DDL'S PARA TABELA DE MAQUINAS_PRODUTOS
ALTER TABLE MAQUINAS_PRODUTOS ADD COLUMN DESCRICAO TEXT COMMENT 'DESCRIÇÃO DO USO DA MÁQUINA COM O PRODUTO';
ALTER TABLE MAQUINAS_PRODUTOS CHANGE HORAS_UTLZ HORAS_UTLZ INT COMMENT 'HORAS DE UTILIZAÇÃO DA MÁQUINA';
ALTER TABLE MAQUINAS_PRODUTOS MODIFY PRODUTO_UTLZ INT NOT NULL COMMENT 'CÓDIGO DO PRODUTO UTILIZADO';
ALTER TABLE MAQUINAS_PRODUTOS DROP COLUMN DESCRICAO COMMENT 'REMOVE A COLUNA DE DESCRIÇÃO DO USO DA MÁQUINA COM O PRODUTO';

-- DDL'S PARA TABELA DE REGISTRO_MANUTENCAO
ALTER TABLE REGISTRO_MANUTENCAO ADD COLUMN RESPONSAVEL VARCHAR(100) COMMENT 'RESPONSÁVEL PELA MANUTENÇÃO';
ALTER TABLE REGISTRO_MANUTENCAO CHANGE RM_DESC RM_DESC TEXT NOT NULL COMMENT 'DESCRIÇÃO DA MANUTENÇÃO';
ALTER TABLE REGISTRO_MANUTENCAO MODIFY RM_DATA DATE NOT NULL COMMENT 'DATA DO REGISTRO';
ALTER TABLE REGISTRO_MANUTENCAO DROP COLUMN RESPONSAVEL COMMENT 'REMOVE A COLUNA DE RESPONSÁVEL PELA MANUTENÇÃO';

-- DDL'S PARA TABELA DE TIPO_COMPONENTE
ALTER TABLE TIPO_COMPONENTE ADD COLUMN DESCRICAO TEXT COMMENT 'DESCRIÇÃO DO TIPO DE COMPONENTE';
ALTER TABLE TIPO_COMPONENTE CHANGE TPDC_NOME NOME_TIPO_COMPONENTE VARCHAR(100) NOT NULL COMMENT 'NOME DO TIPO DE COMPONENTE';
ALTER TABLE TIPO_COMPONENTE MODIFY TDCP_QNT_ESTQ DECIMAL(10, 2) COMMENT 'QUANTIDADE EM ESTOQUE DO TIPO DE COMPONENTE';
ALTER TABLE TIPO_COMPONENTE DROP COLUMN DESCRICAO COMMENT 'REMOVE A COLUNA DE DESCRIÇÃO DO TIPO DE COMPONENTE';

-- DDL'S PARA TABELA DE COMPONENTES
ALTER TABLE COMPONENTES ADD COLUMN DESCRICAO TEXT COMMENT 'DESCRIÇÃO DO COMPONENTE';
ALTER TABLE COMPONENTES CHANGE COMP_UNIDADE COMP_UNIDADE VARCHAR(50) NOT NULL COMMENT 'UNIDADE DO COMPONENTE';
ALTER TABLE COMPONENTES MODIFY COMP_QNT_ESTQ DECIMAL(10, 2) COMMENT 'QUANTIDADE EM ESTOQUE DO COMPONENTE';
ALTER TABLE COMPONENTES DROP COLUMN DESCRICAO COMMENT 'REMOVE A COLUNA DE DESCRIÇÃO DO COMPONENTE';

-- DDL'S PARA TABELA DE PRODUTOS_COMPONENTES
ALTER TABLE PRODUTOS_COMPONENTES ADD COLUMN PRECO_UNITARIO DECIMAL(10, 3) COMMENT 'PREÇO UNITÁRIO DO COMPONENTE';
ALTER TABLE PRODUTOS_COMPONENTES CHANGE PROD_PRDZ COD_PRODUTO INT COMMENT 'CÓDIGO DO PRODUTO';
ALTER TABLE PRODUTOS_COMPONENTES MODIFY COMPONENTE INT NOT NULL COMMENT 'CÓDIGO DO COMPONENTE';
ALTER TABLE PRODUTOS_COMPONENTES DROP COLUMN PRECO_UNITARIO COMMENT 'REMOVE A COLUNA DE PREÇO UNITÁRIO DO COMPONENTE';

-- DDL'S PARA TABELA DE RECURSOS_ESPECIFICOS
ALTER TABLE RECURSOS_ESPECIFICOS ADD COLUMN DESCRICAO TEXT COMMENT 'DESCRIÇÃO DO RECURSO ESPECÍFICO';
ALTER TABLE RECURSOS_ESPECIFICOS CHANGE RE_HORAS_MAO_OBRA RE_HORAS_MAO_OBRA INT COMMENT 'HORAS DE MÃO DE OBRA';
ALTER TABLE RECURSOS_ESPECIFICOS MODIFY RE_TEMPO_MAQ VARCHAR(10) COMMENT 'TEMPO DE USO DA MÁQUINA';
ALTER TABLE RECURSOS_ESPECIFICOS DROP COLUMN DESCRICAO COMMENT 'REMOVE A COLUNA DE DESCRIÇÃO DO RECURSO ESPECÍFICO';

-- DDL'S PARA TABELA DE EMPRESAS
ALTER TABLE EMPRESAS ADD COLUMN EMAIL_EMPRESA VARCHAR(100) COMMENT 'EMAIL DA EMPRESA';
ALTER TABLE EMPRESAS CHANGE EMPRESA_RAMO RAMO_EMPRESA VARCHAR(100) NOT NULL COMMENT 'RAMO DE ATIVIDADE DA EMPRESA';
ALTER TABLE EMPRESAS MODIFY EMPRESA_CONT VARCHAR(15) COMMENT 'CONTATO DA EMPRESA';
ALTER TABLE EMPRESAS DROP COLUMN EMAIL_EMPRESA COMMENT 'REMOVE A COLUNA DE EMAIL DA EMPRESA';

-- DDL'S PARA TABELA DE TELEFONES_EMPRESAS
ALTER TABLE TELEFONES_EMPRESAS ADD COLUMN TIPO_TLF VARCHAR(20) COMMENT 'TIPO DO TELEFONE (MÓVEL, FIXO)';
ALTER TABLE TELEFONES_EMPRESAS CHANGE TELEFONE TELEFONE VARCHAR(15) NOT NULL COMMENT 'NÚMERO DO TELEFONE DA EMPRESA';
ALTER TABLE TELEFONES_EMPRESAS MODIFY ID_TELF_EMP INT AUTO_INCREMENT COMMENT 'CÓDIGO DO TELEFONE DA EMPRESA';
ALTER TABLE TELEFONES_EMPRESAS DROP COLUMN TIPO_TLF COMMENT 'REMOVE A COLUNA DE TIPO DO TELEFONE DA EMPRESA';

-- DDL'S PARA TABELA DE FORNECEDORES
ALTER TABLE FORNECEDORES ADD COLUMN EMAIL_FORNECEDOR VARCHAR(100) COMMENT 'EMAIL DO FORNECEDOR';
ALTER TABLE FORNECEDORES CHANGE CONT_PESSOA CONTATO_PESSOA VARCHAR(100) COMMENT 'NOME DO CONTATO PESSOAL';
ALTER TABLE FORNECEDORES MODIFY FORN_NMR VARCHAR(15) COMMENT 'NÚMERO DO FORNECEDOR';
ALTER TABLE FORNECEDORES DROP COLUMN EMAIL_FORNECEDOR COMMENT 'REMOVE A COLUNA DE EMAIL DO FORNECEDOR';

-- DDL'S PARA TABELA DE COMPONENTES_FORNECEDORES
ALTER TABLE COMPONENTES_FORNECEDORES ADD COLUMN DESCRICAO TEXT COMMENT 'DESCRIÇÃO DO FORNECEDOR DO COMPONENTE';
ALTER TABLE COMPONENTES_FORNECEDORES CHANGE PRECO_UNT PRECO_UNT DECIMAL(10, 3) COMMENT 'PREÇO UNITÁRIO DO COMPONENTE';
ALTER TABLE COMPONENTES_FORNECEDORES MODIFY FORNECEDOR_COMP INT NOT NULL COMMENT 'CÓDIGO DO FORNECEDOR';
ALTER TABLE COMPONENTES_FORNECEDORES DROP COLUMN DESCRICAO COMMENT 'REMOVE A COLUNA DE DESCRIÇÃO DO FORNECEDOR DO COMPONENTE';

-- DDL'S PARA TABELA DE REGISTRO_RESSUPRIMENTO
ALTER TABLE REGISTRO_RESSUPRIMENTO ADD COLUMN DESCRICAO TEXT COMMENT 'DESCRIÇÃO DO RESSUPRIMENTO';
ALTER TABLE REGISTRO_RESSUPRIMENTO CHANGE RS_QNT_NECES RS_QNT_NECES DECIMAL(10, 3) COMMENT 'QUANTIDADE NECESSÁRIA';
ALTER TABLE REGISTRO_RESSUPRIMENTO MODIFY RS_DATA DATE NOT NULL COMMENT 'DATA DO RESSUPRIMENTO';
ALTER TABLE REGISTRO_RESSUPRIMENTO DROP COLUMN DESCRICAO COMMENT 'REMOVE A COLUNA DE DESCRIÇÃO DO RESSUPRIMENTO';

-- DDL'S PARA TABELA DE ENDERECOS_CLIENTES
ALTER TABLE ENDERECOS_CLIENTES ADD COLUMN TIPO_CLIENTE VARCHAR(20) COMMENT 'TIPO DO CLIENTE (FISICA, JURIDICA)';
ALTER TABLE ENDERECOS_CLIENTES CHANGE RUA NOME_RUA VARCHAR(100) NOT NULL COMMENT 'NOME DA RUA';
ALTER TABLE ENDERECOS_CLIENTES MODIFY CEP VARCHAR(10) COMMENT 'CEP DO ENDEREÇO DO CLIENTE';
ALTER TABLE ENDERECOS_CLIENTES DROP COLUMN TIPO_CLIENTE COMMENT 'REMOVE A COLUNA DE TIPO DO CLIENTE';

-- DDL'S PARA TABELA DE CLIENTES
ALTER TABLE CLIENTES ADD COLUMN EMAIL_CLIENTE VARCHAR(100) COMMENT 'EMAIL DO CLIENTE';
ALTER TABLE CLIENTES CHANGE CLT_PESS_CONT NOME_CONTATO VARCHAR(100) COMMENT 'NOME DO CONTATO DO CLIENTE';
ALTER TABLE CLIENTES MODIFY CLT_NMR_CONT VARCHAR(15) COMMENT 'NÚMERO DE CONTATO DO CLIENTE';
ALTER TABLE CLIENTES DROP COLUMN EMAIL_CLIENTE COMMENT 'REMOVE A COLUNA DE EMAIL DO CLIENTE';

-- DDL'S PARA TABELA DE ENCOMENDAS
ALTER TABLE ENCOMENDAS ADD COLUMN STATUS_ENCOMENDA VARCHAR(20) COMMENT 'STATUS DA ENCOMENDA';
ALTER TABLE ENCOMENDAS CHANGE ENCOM_CLT COD_CLIENTE INT NOT NULL COMMENT 'CÓDIGO DO CLIENTE';
ALTER TABLE ENCOMENDAS MODIFY ENCOM_DATA DATE NOT NULL COMMENT 'DATA DA ENCOMENDA';
ALTER TABLE ENCOMENDAS DROP COLUMN STATUS_ENCOMENDA COMMENT 'REMOVE A COLUNA DE STATUS DA ENCOMENDA';

-- DDL'S PARA TABELA DE PAGAMENTOS
ALTER TABLE PAGAMENTOS ADD COLUMN FORMA_PAGAMENTO VARCHAR(20) COMMENT 'FORMA DE PAGAMENTO';
ALTER TABLE PAGAMENTOS CHANGE PAG_VLR_DESC VALOR_DESCONTO DECIMAL(10, 3) COMMENT 'VALOR DO DESCONTO';
ALTER TABLE PAGAMENTOS MODIFY PAG_DATA DATE NOT NULL COMMENT 'DATA DO PAGAMENTO';
ALTER TABLE PAGAMENTOS DROP COLUMN FORMA_PAGAMENTO COMMENT 'REMOVE A COLUNA DE FORMA DE PAGAMENTO';

-- DDL'S PARA TABELA DE PRODUTOS_ENCOMENDAS
ALTER TABLE PRODUTOS_ENCOMENDAS ADD COLUMN VALOR_UNITARIO DECIMAL(10, 3) COMMENT 'VALOR UNITÁRIO DO PRODUTO ENCOMENDADO';
ALTER TABLE PRODUTOS_ENCOMENDAS CHANGE QNT_PROD QUANTIDADE INT NOT NULL COMMENT 'QUANTIDADE DO PRODUTO ENCOMENDADO';
ALTER TABLE PRODUTOS_ENCOMENDAS MODIFY ENCM_COD INT NOT NULL COMMENT 'CÓDIGO DA ENCOMENDA';
ALTER TABLE PRODUTOS_ENCOMENDAS DROP COLUMN VALOR_UNITARIO COMMENT 'REMOVE A COLUNA DE VALOR UNITÁRIO DO PRODUTO ENCOMENDADO';

